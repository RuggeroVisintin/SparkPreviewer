precision mediump 	float;

uniform sampler2D 	sampler;
uniform float		alpha;

varying vec2 		outUvs;
varying vec3 		outNormals;
varying vec3 		outPositions;

vec3			lightDirection = vec3(-1.0, 0.0, 0.0);
vec3			lightColor = vec3(1.0, 1.0, 1.0);
vec4			ambientColor = vec4(0.1, 0.1, 0.1, 1.0);

void main(void) 
{
	vec4 texel = texture2D(sampler, outUvs);
	float diffuseFactor;
	
	if(gl_FrontFacing) {
		diffuseFactor = dot(normalize(outNormals), lightDirection);
	} else {
		diffuseFactor = dot(-normalize(outNormals), lightDirection);
	}
	
	vec4 diffuseColor = max(0.0, -diffuseFactor) * vec4(lightColor, 1.0);
	if(texel.a >= 1.0) discard;

	gl_FragColor = texel * (diffuseColor + ambientColor);
}
